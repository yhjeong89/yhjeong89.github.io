<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Devyh Archive</title>
  
  <subtitle>매일 기록하는 작은 성장들</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-17T16:49:51.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Devyh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android에서 Boost 라이브러리 사용하기 (CMake 빌드)</title>
    <link href="http://yoursite.com/2018/04/18/androidBoost/"/>
    <id>http://yoursite.com/2018/04/18/androidBoost/</id>
    <published>2018-04-17T16:39:53.000Z</published>
    <updated>2018-04-17T16:49:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-NDK-Boost-using-CMake"><a href="#Android-NDK-Boost-using-CMake" class="headerlink" title="Android + NDK + Boost (using CMake)"></a>Android + NDK + Boost (using CMake)</h1><p> &ensp; 안드로이드 네이티브 프로그래밍을 하다보면 Boost의 강력한 기능이 필요한 경우가 종종 발생한다. 특히 네이티브 레벨에서 직렬화(Serialization)를 수월하게 수행하기 위해서는 Boost의 serialization 라이브러리가 매우 유용하다. 구글링을 통해서 Boost 포팅 방법을 검색하면 대체로 ndk-build 방식의 튜토리얼들만 볼 수 있다.<br>&ensp;그러나 Android Studio를 사용하는 입장에서 CMake 빌드 방식을 이용하여 네이티브 레벨 개발을 하면 편리한 점이 많다. 매번 ndk-build를 실행해 라이브러리 파일을 만들 필요가 없고 별다른 설정 없이도 C++ 코드도 실시간 문법 에러 체크, 자동완성 등의 이점을 볼 수 있기 때문에 CMake 방식에 익숙해지는 것이 좋다. 본 포스팅에서는 CMake 빌드 환경에서 안드로이드 네이티브 프로그래밍 시 Boost를 사용하는 방법에 대한 튜토리얼을 진행한다. </p><blockquote><p><strong>튜토리얼 진행 환경</strong><br>IDE : Android Studio 3.0.1<br>SDK : min 15, target 26<br>NDK : android-ndk-r14b </p></blockquote><h2 id="Boost-for-Android-다운로드"><a href="#Boost-for-Android-다운로드" class="headerlink" title="Boost for Android 다운로드"></a>Boost for Android 다운로드</h2><p>&ensp; <a href="https://github.com/moritz-wundke/Boost-for-Android" target="_blank" rel="noopener">Boost-for-Android Github</a>에서 직접 소스를 받아 빌드를 할 수 있지만 Boost를 직접 빌드하는 작업 자체에 상당히 많은 시간이 필요하다. 굳이 직접 Boost 소스 코드를 빌드할 이유가 없다면 미리 빌드 된 <a href="https://github.com/PurpleI2P/Boost-for-Android-Prebuilt" target="_blank" rel="noopener">Prebuild 파일</a>을 받는 것이 좋다.<br>&ensp; Prebuild 라이브러리의 repository를 보면 세 가지 버전의 Boost가 있는 것을 확인할 수 있다. 다운로드 이후 본인이 사용하고자 하는 버전의 Boost만 사용하면 된다. 본 튜토리얼에서는 1.53.0 버전을 사용한다.</p><h2 id="C-지원-Android-프로젝트-생성"><a href="#C-지원-Android-프로젝트-생성" class="headerlink" title="C++ 지원 Android 프로젝트 생성"></a>C++ 지원 Android 프로젝트 생성</h2><blockquote><p>강좌와 직접적인 관련이 없는 부분은 간단한 서술로 대체합니다.<br>NDK, CMake, LLDB 등 네이티브 개발에 필요한 사항은 설치 되어 있다고 가정합니다.</p></blockquote><p>&ensp; Android Studio에서 프로젝트를 생성할 때 C++을 지원하는 프로젝트로 생성한다. 이클립스를 사용하던 때와 달리 자동으로 JNI 부분에 대한 각종 설정을 수행하고 샘플 코드를 제공한다. 또한 CMake 빌드 방식을 사용하기 때문에 다양한 편의 기능으로 전보다 쉽게 코드를 작성할 수 있다.</p><p><img src="images/180418/001.png" alt="Java 레벨에서 native 메서드를 선언만 해도 JNI 메서드를 자동으로 생성해준다."></p><h2 id="프로젝트에-Boost-라이브러리-추가"><a href="#프로젝트에-Boost-라이브러리-추가" class="headerlink" title="프로젝트에 Boost 라이브러리 추가"></a>프로젝트에 Boost 라이브러리 추가</h2><p>&ensp; 빌드 된 Boost 라이브러리를 안드로이드 프로젝트에 추가한다. 본인의 개발 스타일에 따라 폴더 구조를 다르게 가져갈 수 있지만 본 강좌에서는 서드파티 라이브러리는 따로 관리할 수 있도록 나눠서 추가한다.<br><img src="https://picasaweb.google.com/104532963104893492079/6545442213501672225#6545442212238774114" alt="프로젝트의 Root에 3rdparty 폴더를 생성하여 라이브러리 종류별로 관리한다."></p><h2 id="Boost-라이브러리-링크"><a href="#Boost-라이브러리-링크" class="headerlink" title="Boost 라이브러리 링크"></a>Boost 라이브러리 링크</h2><p>&ensp; 외부 라이브러리를 가져왔으면 이를 프로젝트에 링크해야 정상적으로 사용할 수 있다. 이전의 ndk-build 방식에서는 Android&#46;mk 파일을 수정함으로서 라이브러리를 링크했지만 CMake 방식에서는 CMakeLists.txt 파일을 수정함으로서 링크가 가능하다.<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.4</span>.<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">############### Boost ###############</span></span><br><span class="line"><span class="keyword">set</span>(BOOST_ROOT <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/src/main/<span class="number">3</span>rdparty/boost)</span><br><span class="line"><span class="keyword">set</span>(BOOST_LIBS_PATH <span class="variable">$&#123;BOOST_ROOT&#125;</span>/lib/<span class="variable">$&#123;ANDROID_ABI&#125;</span>/lib)</span><br><span class="line"><span class="keyword">set</span>(BOOST_INC_PATH <span class="variable">$&#123;BOOST_ROOT&#125;</span>/<span class="keyword">include</span>)</span><br><span class="line"></span><br><span class="line">file(GLOB BOOST_LIBS <span class="variable">$&#123;BOOST_LIBS_PATH&#125;</span>/*.a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;BOOST_INC_PATH&#125;</span>)</span><br><span class="line"><span class="comment">#####################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>(native-lib SHARED src/main/cpp/native-lib.cpp)</span><br><span class="line"><span class="keyword">find_library</span>(log-lib log)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(native-lib</span><br><span class="line"><span class="variable">$&#123;BOOST_LIBS&#125;</span>  <span class="comment">### Link boost libraries</span></span><br><span class="line"><span class="variable">$&#123;log-lib&#125;</span>)</span><br></pre></td></tr></table></figure></p><p>&ensp; Boost 주석 영역, 하단의 ### Link boost libraries 부분을 제외하면 기존에 생성이 되어 있던 부분이다. 위와 같이 추가함으로서 라이브러리를 프로젝트에 쉽게 링크할 수 있다. <code>file(GLOB BOOST_LIBS ${BOOST_LIBS_PATH}/*.a)</code> 코드는 해당 경로의 디렉토리에 있는 확장자 .a에 해당하는 모든 파일들을 참조할 수 있도록 도와준다. 수많은 파일들 이름을 일일이 입력하지 않고 쉽게 작업할 수 있다. 본 스크립트에서는 <code>BOOST_LIBS</code> 변수 안에 *.a에 해당하는 모든 파일들의 경로를 저장하고 있으며, 마지막 <code>target_link_libraries</code>를 실행하며 이를 사용하는 모습을 볼 수 있다.</p><h2 id="프로젝트-ABI-버전-설정"><a href="#프로젝트-ABI-버전-설정" class="headerlink" title="프로젝트 ABI 버전 설정"></a>프로젝트 ABI 버전 설정</h2><p> &ensp;구버전의 Boost 라이브러리와 새로운 버전의 안드로이드를 사용할 경우 최신 기기에서는 위 설정이 제대로 작동하지 않을 수 있다. 이는 <code>BOOST_LIBS_PATH</code> 설정 시 <code>${ANDROID_ABI}</code>부분으로 인해 arm64 ABI를 사용하려고 시도하기 때문이다. 문제를 해결하기 위해 빌드 시 armeabi-v7a를 사용하도록 강제한다. 이는 app의 gradle 파일에서 externalNativeBuild의 ndk 항목에 abiFilters를 ‘armeabi-v7a’로 설정하면 가능하다.<br><img src="https://picasaweb.google.com/104532963104893492079/6545446165653317409#6545446162759942914" alt="ABI를 Boost에서 지원하는 버전으로 강제"></p><h2 id="샘플-코드-작성"><a href="#샘플-코드-작성" class="headerlink" title="샘플 코드 작성"></a>샘플 코드 작성</h2><p>&ensp; 여기까지 진행 됐으면 Boost 라이브러리를 사용할 준비는 끝난 것이다. 아래의 샘플 코드를 이용하면 Boost가 잘 적용되는지 확인할 수 있다. 아래의 코드 중 Boost 사용 부분은 공식 튜토리얼 중 Serialization <a href="https://www.boost.org/doc/libs/1_43_0/libs/serialization/doc/tutorial.html#simplecase" target="_blank" rel="noopener">기본 샘플 코드</a>를 참고했다.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/archive/text_oarchive.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;boost/archive/text_iarchive.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gps_position</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">boost</span>:</span>:serialization::access;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">Archive</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">void</span> <span class="title">serialize</span>(<span class="title">Archive</span> &amp;<span class="title">ar</span>, <span class="title">const</span> <span class="title">unsigned</span> <span class="title">int</span> <span class="title">version</span>) &#123;</span></span><br><span class="line">ar &amp; degrees;</span><br><span class="line">ar &amp; minutes;</span><br><span class="line">ar &amp; seconds;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> degrees;</span><br><span class="line"><span class="keyword">int</span> minutes;</span><br><span class="line"><span class="keyword">float</span> seconds;</span><br><span class="line"></span><br><span class="line">gps_position()&#123;&#125;;</span><br><span class="line">gps_position(<span class="keyword">int</span> d, <span class="keyword">int</span> m, <span class="keyword">float</span> s) : degrees(d), minutes(m), seconds(s)&#123;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span></span><br><span class="line">JNIEXPORT jstring JNICALL</span><br><span class="line">Java_com_devyh_boostforandroidexample_MainActivity_stringFromJNI(JNIEnv *env, jobject <span class="comment">/* this */</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* filename = <span class="string">"/storage/emulated/0/seriTest.bin"</span>;</span><br><span class="line"><span class="built_in">std</span>::<span class="function">ofstream <span class="title">ofs</span><span class="params">(filename)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> gps_position <span class="title">g</span><span class="params">(<span class="number">35</span>, <span class="number">59</span>, <span class="number">24.567f</span>)</span></span>;</span><br><span class="line">&#123;</span><br><span class="line">boost::archive::<span class="function">text_oarchive <span class="title">oa</span><span class="params">(ofs)</span></span>;</span><br><span class="line">oa &lt;&lt; g;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gps_position newg;</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="function">ifstream <span class="title">ifs</span><span class="params">(filename)</span></span>;</span><br><span class="line">boost::archive::<span class="function">text_iarchive <span class="title">ia</span><span class="params">(ifs)</span></span>;</span><br><span class="line">ia &gt;&gt; newg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> hello = <span class="string">"Serialize a instance of custom class"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> env-&gt;NewStringUTF(hello.c_str());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p><strong>코드 실행 시 주의사항</strong></p><p>위 예제는 디바이스에 파일을 저장하고 읽기 때문에 관련된 권한을 설정해야 합니다. AndroidManifest.xml 파일에 아래와 같은 퍼미션을 작성합니다. </p><blockquote></blockquote><p>\<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"><br>\<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE">  </uses-permission></uses-permission></p><p>자동으로 권한을 묻는 코드를 작성하지 않았다면 수동으로 활성화해야 합니다.</p></blockquote><h2 id="샘플-프로젝트"><a href="#샘플-프로젝트" class="headerlink" title="샘플 프로젝트"></a>샘플 프로젝트</h2><p>&ensp; 본 튜토리얼에 대한 샘플 프로젝트는 다음 <a href="https://github.com/yhjeong89/BoostForAndroidSimpleExample" target="_blank" rel="noopener">링크</a>에 있다.</p><p><strong>잘 안되는 부분이나 문의 덧글에 대해서는 언제나 환영입니다. 하루 이내에 답변을 달아 드리도록 노력하겠습니다.</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android-NDK-Boost-using-CMake&quot;&gt;&lt;a href=&quot;#Android-NDK-Boost-using-CMake&quot; class=&quot;headerlink&quot; title=&quot;Android + NDK + Boost (using CMake
      
    
    </summary>
    
      <category term="Programming" scheme="http://yoursite.com/categories/Programming/"/>
    
      <category term="Android" scheme="http://yoursite.com/categories/Programming/Android/"/>
    
    
      <category term="Android, NDK, Boost" scheme="http://yoursite.com/tags/Android-NDK-Boost/"/>
    
  </entry>
  
  <entry>
    <title>포스팅 수정 쉽구만</title>
    <link href="http://yoursite.com/2018/03/06/second-post/"/>
    <id>http://yoursite.com/2018/03/06/second-post/</id>
    <published>2018-03-06T14:45:50.000Z</published>
    <updated>2018-03-09T15:56:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Welcome-to-StackEdit"><a href="#Welcome-to-StackEdit" class="headerlink" title="Welcome to StackEdit!"></a>Welcome to StackEdit!</h1><p>Hi! I’m your first Markdown file in <strong>StackEdit</strong>. If you want to learn about StackEdit, you can read me. If you want to play with Markdown, you can edit me. If you have finished with me, you can just create new files by opening the <strong>file explorer</strong> on the left corner of the navigation bar.</p><h1 id="Files"><a href="#Files" class="headerlink" title="Files"></a>Files</h1><p>StackEdit stores your files in your browser, which means all your files are automatically saved locally and are accessible <strong>offline!</strong></p><h2 id="Create-files-and-folders"><a href="#Create-files-and-folders" class="headerlink" title="Create files and folders"></a>Create files and folders</h2><p>The file explorer is accessible using the button in left corner of the navigation bar. You can create a new file by clicking the <strong>New file</strong> button in the file explorer. You can also create folders by clicking the <strong>New folder</strong> button.</p><h2 id="Switch-to-another-file"><a href="#Switch-to-another-file" class="headerlink" title="Switch to another file"></a>Switch to another file</h2><p>All your files are listed in the file explorer. You can switch from one to another by clicking a file in the list.</p><h2 id="Rename-a-file"><a href="#Rename-a-file" class="headerlink" title="Rename a file"></a>Rename a file</h2><p>You can rename the current file by clicking the file name in the navigation bar or by clicking the <strong>Rename</strong> button in the file explorer.</p><h2 id="Delete-a-file"><a href="#Delete-a-file" class="headerlink" title="Delete a file"></a>Delete a file</h2><p>You can delete the current file by clicking the <strong>Remove</strong> button in the file explorer. The file will be moved into the <strong>Trash</strong> folder and automatically deleted after 7 days of inactivity.</p><h2 id="Export-a-file"><a href="#Export-a-file" class="headerlink" title="Export a file"></a>Export a file</h2><p>You can export the current file by clicking <strong>Export to disk</strong> in the menu. You can choose to export the file as plain Markdown, as HTML using a Handlebars template or as a PDF.</p><h1 id="Synchronization"><a href="#Synchronization" class="headerlink" title="Synchronization"></a>Synchronization</h1><p>Synchronization is one of the biggest features of StackEdit. It enables you to synchronize any file in your workspace with other files stored in your <strong>Google Drive</strong>, your <strong>Dropbox</strong> and your <strong>GitHub</strong> accounts. This allows you to keep writing on other devices, collaborate with people you share the file with, integrate easily into your workflow… The synchronization mechanism takes place every minute in the background, downloading, merging, and uploading file modifications.</p><p>There are two types of synchronization and they can complement each other:</p><ul><li><p>The workspace synchronization will sync all your files, folders and settings automatically. This will allow you to fetch your workspace on any other device.</p><blockquote><p>To start syncing your workspace, just sign in with Google in the menu.</p></blockquote></li><li><p>The file synchronization will keep one file of the workspace synced with one or multiple files in <strong>Google Drive</strong>, <strong>Dropbox</strong> or <strong>GitHub</strong>.</p><blockquote><p>Before starting to sync files, you must link an account in the <strong>Synchronize</strong> sub-menu.</p></blockquote></li></ul><h2 id="Open-a-file"><a href="#Open-a-file" class="headerlink" title="Open a file"></a>Open a file</h2><p>You can open a file from <strong>Google Drive</strong>, <strong>Dropbox</strong> or <strong>GitHub</strong> by opening the <strong>Synchronize</strong> sub-menu and clicking <strong>Open from</strong>. Once opened in the workspace, any modification in the file will be automatically synced.</p><h2 id="Save-a-file"><a href="#Save-a-file" class="headerlink" title="Save a file"></a>Save a file</h2><p>You can save any file of the workspace to <strong>Google Drive</strong>, <strong>Dropbox</strong> or <strong>GitHub</strong> by opening the <strong>Synchronize</strong> sub-menu and clicking <strong>Save on</strong>. Even if a file in the workspace is already synced, you can save it to another location. StackEdit can sync one file with multiple locations and accounts.</p><h2 id="Synchronize-a-file"><a href="#Synchronize-a-file" class="headerlink" title="Synchronize a file"></a>Synchronize a file</h2><p>Once your file is linked to a synchronized location, StackEdit will periodically synchronize it by downloading/uploading any modification. A merge will be performed if necessary and conflicts will be resolved.</p><p>If you just have modified your file and you want to force syncing, click the <strong>Synchronize now</strong> button in the navigation bar.</p><blockquote><p><strong>Note:</strong> The <strong>Synchronize now</strong> button is disabled if you have no file to synchronize.</p></blockquote><h2 id="Manage-file-synchronization"><a href="#Manage-file-synchronization" class="headerlink" title="Manage file synchronization"></a>Manage file synchronization</h2><p>Since one file can be synced with multiple locations, you can list and manage synchronized locations by clicking <strong>File synchronization</strong> in the <strong>Synchronize</strong> sub-menu. This allows you to list and remove synchronized locations that are linked to your file.</p><h1 id="Publication"><a href="#Publication" class="headerlink" title="Publication"></a>Publication</h1><p>Publishing in StackEdit makes it simple for you to publish online your files. Once you’re happy with a file, you can publish it to different hosting platforms like <strong>Blogger</strong>, <strong>Dropbox</strong>, <strong>Gist</strong>, <strong>GitHub</strong>, <strong>Google Drive</strong>, <strong>WordPress</strong> and <strong>Zendesk</strong>. With <a href="http://handlebarsjs.com/" target="_blank" rel="noopener">Handlebars templates</a>, you have full control over what you export.</p><blockquote><p>Before starting to publish, you must link an account in the <strong>Publish</strong> sub-menu.</p></blockquote><h2 id="Publish-a-File"><a href="#Publish-a-File" class="headerlink" title="Publish a File"></a>Publish a File</h2><p>You can publish your file by opening the <strong>Publish</strong> sub-menu and by clicking <strong>Publish to</strong>. For some locations, you can choose between the following formats:</p><ul><li>Markdown: publish the Markdown text on a website that can interpret it (<strong>GitHub</strong> for instance),</li><li>HTML: publish the file converted to HTML via a Handlebars template (on a blog for example).</li></ul><h2 id="Update-a-publication"><a href="#Update-a-publication" class="headerlink" title="Update a publication"></a>Update a publication</h2><p>After publishing, StackEdit keeps your file linked to that publication which makes it easy for you to re-publish it. Once you have modified your file and you want to update your publication, click on the <strong>Publish now</strong> button in the navigation bar.</p><blockquote><p><strong>Note:</strong> The <strong>Publish now</strong> button is disabled if your file has not been published yet.</p></blockquote><h2 id="Manage-file-publication"><a href="#Manage-file-publication" class="headerlink" title="Manage file publication"></a>Manage file publication</h2><p>Since one file can be published to multiple locations, you can list and manage publish locations by clicking <strong>File publication</strong> in the <strong>Publish</strong> sub-menu. This allows you to list and remove publication locations that are linked to your file.</p><h1 id="Markdown-extensions"><a href="#Markdown-extensions" class="headerlink" title="Markdown extensions"></a>Markdown extensions</h1><p>StackEdit extends the standard Markdown syntax by adding extra <strong>Markdown extensions</strong>, providing you with some nice features.</p><blockquote><p><strong>ProTip:</strong> You can disable any <strong>Markdown extension</strong> in the <strong>File properties</strong> dialog.</p></blockquote><h2 id="SmartyPants"><a href="#SmartyPants" class="headerlink" title="SmartyPants"></a>SmartyPants</h2><p>SmartyPants converts ASCII punctuation characters into “smart” typographic punctuation HTML entities. For example:</p><table><thead><tr><th></th><th>ASCII</th><th>HTML</th></tr></thead><tbody><tr><td>Single backticks</td><td><code>&#39;Isn&#39;t this fun?&#39;</code></td><td>‘Isn’t this fun?’</td></tr><tr><td>Quotes</td><td><code>&quot;Isn&#39;t this fun?&quot;</code></td><td>“Isn’t this fun?”</td></tr><tr><td>Dashes</td><td><code>-- is en-dash, --- is em-dash</code></td><td>– is en-dash, — is em-dash</td></tr></tbody></table><h2 id="KaTeX"><a href="#KaTeX" class="headerlink" title="KaTeX"></a>KaTeX</h2><p>You can render LaTeX mathematical expressions using <a href="https://khan.github.io/KaTeX/" target="_blank" rel="noopener">KaTeX</a>:</p><p>The <em>Gamma function</em> satisfying $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$ is via the Euler integral</p><p>$$<br>\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt\,.<br>$$</p><blockquote><p>You can find more information about <strong>LaTeX</strong> mathematical expressions <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">here</a>.</p></blockquote><h2 id="UML-diagrams"><a href="#UML-diagrams" class="headerlink" title="UML diagrams"></a>UML diagrams</h2><p>You can render UML diagrams using <a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">Mermaid</a>. For example, this will produce a sequence diagram:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">Alice -&gt;&gt; Bob: Hello Bob, how are you?</span><br><span class="line">Bob--&gt;&gt;John: How about you John?</span><br><span class="line">Bob--x Alice: I am good thanks!</span><br><span class="line">Bob-x John: I am good thanks!</span><br><span class="line">Note right of John: Bob thinks a long&lt;br/&gt;long time, so long&lt;br/&gt;that the text does&lt;br/&gt;not fit on a row.</span><br><span class="line"></span><br><span class="line">Bob--&gt;Alice: Checking with John...</span><br><span class="line">Alice-&gt;John: Yes... John, how are you?</span><br></pre></td></tr></table></figure><p>And this will produce a flow chart:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[Square Rect] -- Link text --&gt; B((Circle))</span><br><span class="line">A --&gt; C(Round Rect)</span><br><span class="line">B --&gt; D&#123;Rhombus&#125;</span><br><span class="line">C --&gt; D</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Welcome-to-StackEdit&quot;&gt;&lt;a href=&quot;#Welcome-to-StackEdit&quot; class=&quot;headerlink&quot; title=&quot;Welcome to StackEdit!&quot;&gt;&lt;/a&gt;Welcome to StackEdit!&lt;/h1
      
    
    </summary>
    
      <category term="Diary" scheme="http://yoursite.com/categories/Diary/"/>
    
      <category term="일기" scheme="http://yoursite.com/categories/Diary/%EC%9D%BC%EA%B8%B0/"/>
    
    
      <category term="잡담" scheme="http://yoursite.com/tags/%EC%9E%A1%EB%8B%B4/"/>
    
  </entry>
  
  <entry>
    <title>첫 글 테스트!</title>
    <link href="http://yoursite.com/2018/03/06/github-page-and-hexo/"/>
    <id>http://yoursite.com/2018/03/06/github-page-and-hexo/</id>
    <published>2018-03-05T16:08:10.000Z</published>
    <updated>2018-03-05T16:09:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>와 github page 첫 글이다!<br>앞으로 열심히 써야지.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;와 github page 첫 글이다!&lt;br&gt;앞으로 열심히 써야지.&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="첫글" scheme="http://yoursite.com/tags/%EC%B2%AB%EA%B8%80/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/03/06/hello-world/"/>
    <id>http://yoursite.com/2018/03/06/hello-world/</id>
    <published>2018-03-05T15:43:17.000Z</published>
    <updated>2018-03-05T15:43:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
